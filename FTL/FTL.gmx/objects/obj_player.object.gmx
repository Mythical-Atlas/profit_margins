<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>angle = 0;
delta = 0;

state = 0;
STANDING = 0;
WALKING = 1;

canInteract = 0;

UP = 270;
DOWN = 90;
LEFT = 180;
RIGHT = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>up = keyboard_check(vk_up);
down = keyboard_check(vk_down);
left = keyboard_check(vk_left);
right = keyboard_check(vk_right);
space = keyboard_check(vk_space);

if((x - 8) % 16 == 0 &amp;&amp; (y - 8) % 16 == 0) {
    if(up &amp;&amp; !down || !up &amp;&amp; down || left &amp;&amp; !right || !left &amp;&amp; right) {delta = 1;}
    else {delta = 0;}
    
         if( up &amp;&amp; !down &amp;&amp; !left &amp;&amp; !right) {angle = UP;}
    else if(!up &amp;&amp; !down &amp;&amp;  left &amp;&amp; !right) {angle = LEFT;}
    else if(!up &amp;&amp;  down &amp;&amp; !left &amp;&amp; !right) {angle = DOWN;}
    else if(!up &amp;&amp; !down &amp;&amp; !left &amp;&amp;  right) {angle = RIGHT;}
    
    if(space) {
        interactable = noone;
    
        if(angle == UP &amp;&amp; place_meeting(x, y - 16, obj_interactable) &amp;&amp; canInteract) {interactable = instance_place(x, y - 16, obj_interactable);}
        if(angle == DOWN &amp;&amp; place_meeting(x, y + 16, obj_interactable) &amp;&amp; canInteract) {interactable = instance_place(x, y + 16, obj_interactable);}
        if(angle == LEFT &amp;&amp; place_meeting(x - 16, y, obj_interactable) &amp;&amp; canInteract) {interactable = instance_place(x - 16, y, obj_interactable);}
        if(angle == RIGHT &amp;&amp; place_meeting(x + 16, y, obj_interactable) &amp;&amp; canInteract) {interactable = instance_place(x + 16, y, obj_interactable)}
        
        if(interactable != noone) {
            if(interactable.interaction == 0) {show_debug_message("INTERACT");}
            if(interactable.interaction == 1) {show_debug_message("DRIVE");}
            
            
            canInteract = 0;
        }
    }
    else {canInteract = 1;}
    
    if(angle == UP) {if(place_meeting(x, y - 16, obj_wall)) {delta = 0;}}
    if(angle == DOWN) {if(place_meeting(x, y + 16, obj_wall)) {delta = 0;}}
    if(angle == LEFT) {if(place_meeting(x - 16, y, obj_wall)) {delta = 0;}}
    if(angle == RIGHT) {if(place_meeting(x + 16, y, obj_wall)) {delta = 0;}}
}

x += dcos(angle) * delta;
y += dsin(angle) * delta;

image_angle = -angle - 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
